/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package VIEW;

import CONNECTION.DB_Connection;
import DAO.DAO_Key;
import DAO.DAO_Province;
import DAO.DAO_QR_Generator;
import DAO.DAO_RandomNumberGenerator;
import DAO.DAO_Validator;
import MODEL.MOD_Area;
import MODEL.MOD_Key;
import MODEL.MOD_Override_QR_Data;
import MODEL.MOD_Province;
import MODEL.MOD_Validator;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import org.json.JSONObject;

/**
 *
 * @author Long
 */
public class Generator extends javax.swing.JInternalFrame {

    /**
     * Creates new form MobilePhoneValidator
     */
    private int[] occupiedValue = null;
    private int[] occupiedCoordinatesX = null;
    private int[] occupiedCoordinatesY = null;
    private String[] occupiedCoordinates = null;
    
    public Generator() throws IOException {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        int w = getSize().width;
        int h = getSize().height;
        int x = (dim.width - w) / 2;
        int y = (dim.height - h) / 2;
        //setLocation(x, y-25);

        //this.setIconImage(Toolkit.getDefaultToolkit().getImage("image/icon.png"));
        //String PicURL = "image/logo.png";
        //ImageIcon picIcon = new ImageIcon(PicURL);
        //logo.setIcon(picIcon);

        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
        Date date = new Date();
        
        // calling components
        initializeComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtResultArray = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        GenerateRandomQRButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        inputKTPNumber = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        InputComboProvince = new javax.swing.JComboBox();
        InputArea = new javax.swing.JComboBox();
        inputTPSID = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        inputPengawasID = new javax.swing.JTextField();
        ToggleLockSetting = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        imageQR = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setTitle("Generate Random Number");
        setFrameIcon(new javax.swing.ImageIcon("C:\\Users\\Long\\Documents\\NetBeansProjects\\evotingGenerator\\image\\icon.png")); // NOI18N

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Debug Array Data"));

        txtResultArray.setColumns(20);
        txtResultArray.setRows(5);
        jScrollPane1.setViewportView(txtResultArray);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Others Info"));

        jButton2.setText("Print This Label");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        GenerateRandomQRButton.setText("Generate Random QR");
        GenerateRandomQRButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerateRandomQRButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("KTP # :");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(GenerateRandomQRButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputKTPNumber)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputKTPNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(GenerateRandomQRButton)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Debug Control"));

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Information Control"));

        jLabel5.setText("Provinsi :");

        jLabel6.setText("Kab / Kota : ");

        jLabel7.setText("TPS ID : ");

        InputComboProvince.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                InputComboProvinceItemStateChanged(evt);
            }
        });

        InputArea.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<Pilih Provinsi>" }));
        InputArea.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                InputAreaItemStateChanged(evt);
            }
        });

        jLabel8.setText("Pengawas ID :");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputPengawasID))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InputComboProvince, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(inputTPSID)
                            .addComponent(InputArea, 0, 472, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(InputComboProvince, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(InputArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(inputTPSID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(inputPengawasID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        ToggleLockSetting.setText("Lock Setting");
        ToggleLockSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ToggleLockSettingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ToggleLockSetting, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ToggleLockSetting)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Result"));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageQR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(imageQR, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GenerateRandomQRButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerateRandomQRButtonActionPerformed
        // TODO add your handling code here:
        DateFormat dateFormat = new SimpleDateFormat("yyyyMMdd-HHmmss");
        Date date = new Date();
        String timestamp = dateFormat.format(date);
        
        try {
        BufferedReader br = new BufferedReader(new FileReader("Components/Settings.json"));
        String json = "";
        
            StringBuilder sb = new StringBuilder();
            String line = br.readLine();

            while (line != null) {
                sb.append(line);
                sb.append(System.lineSeparator());
                line = br.readLine();
            }
            json = sb.toString();
        
            String dataQR = "";
            String filepath = "";
            int arrayX = 0;
            int arrayY = 0;
            int sizeX = 0;
            int sizeY = 0;
            String fileType = "png";
            File myFile = new File(filepath);
            String rawQRData = "";
        
            JSONObject obj = new JSONObject(json);
            arrayX = obj.getJSONObject("qr_data_settings").getInt("x_array_data");
            arrayY = obj.getJSONObject("qr_data_settings").getInt("y_array_data");
            sizeX = obj.getJSONObject("qr_data_settings").getInt("file_width");
            sizeY = obj.getJSONObject("qr_data_settings").getInt("file_height");
            fileType = obj.getJSONObject("qr_data_settings").getString("filetype");
            filepath = obj.getJSONObject("qr_data_settings").getString("saving_folder");
        
            int tpsID = Integer.parseInt(inputTPSID.getText());
            int pengawasID = Integer.parseInt(inputPengawasID.getText());
            if(tpsID < 0 && pengawasID < 0){
                JOptionPane.showMessageDialog(this, "Terjadi kesalahan pada input tps dan pengawas", "Numerik Error", JOptionPane.ERROR_MESSAGE);
            } else {
                String KTPID = inputKTPNumber.getText();
                DAO_RandomNumberGenerator DRNG = new DAO_RandomNumberGenerator();
                List<MOD_Override_QR_Data> arrayNumber = DRNG.invokeClassFunctions(arrayX, arrayY, tpsID, pengawasID, KTPID);
                List<MOD_Key> MK = DRNG.getKeyPublic();
                for (MOD_Override_QR_Data c : arrayNumber) {
                    int[][] dataNumber = c.getRandomNumber();
                    for(int ix = 0; ix < dataNumber.length; ix++){
                        for(int i = 0; i < arrayX; i++) {
                            dataQR += dataNumber[ix][i] + "  ";
                            rawQRData += dataNumber[ix][i];
                        }
                        dataQR += "\n";
                    }
                }

                //System.out.println("MK ny : "+MK.toString());
                //MK.toString();
                //System.out.println("QR DATA : \n"+dataQR);
                //System.out.println("raw QR Data : \n"+rawQRData);
                //debugDataMK(MK);

                DAO_QR_Generator QRG = new DAO_QR_Generator();
                boolean result = QRG.QRGenerator(dataQR, timestamp);
                if(result == true){
                    //System.out.println("success");
                    txtResultArray.setText(""+dataQR);
                    String PicURLQR = "C:\\Users\\Long\\Desktop\\resultQR\\QR-"+timestamp+".png";
                    ImageIcon picIconQR = new ImageIcon(PicURLQR);
                    imageQR.setIcon(null);
                    imageQR.revalidate();
                    imageQR.setIcon(picIconQR);
                } else {
                    //System.out.println("fail");
                    txtResultArray.setText("failed to generate QR data");
                }
            }
        } catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan pada konversi", "Konversi Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_GenerateRandomQRButtonActionPerformed

    private void InputComboProvinceItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_InputComboProvinceItemStateChanged
        // TODO add your handling code here:
        onProvinceComboChanged();
    }//GEN-LAST:event_InputComboProvinceItemStateChanged

    private void InputAreaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_InputAreaItemStateChanged
        // TODO add your handling code here:
        onAreaComboChanged();
    }//GEN-LAST:event_InputAreaItemStateChanged

    private void ToggleLockSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ToggleLockSettingActionPerformed
        // TODO add your handling code here:
        if(ToggleLockSetting.isSelected()){
            InputComboProvince.setEnabled(false);
            InputArea.setEnabled(false);
            inputTPSID.setEnabled(false);
            inputPengawasID.setEnabled(false);
        } else {
            InputComboProvince.setEnabled(true);
            InputArea.setEnabled(true);
            inputTPSID.setEnabled(true);
            inputPengawasID.setEnabled(true);
        }
    }//GEN-LAST:event_ToggleLockSettingActionPerformed
    
    public void initializeComponents() throws IOException{
        DB_Connection dbc = new DB_Connection();
        List<MOD_Province> getAllProvince = (new DAO_Province(dbc.getConnection())).RetrieveProvinceData();

        for(MOD_Province GAP : getAllProvince) {
            InputComboProvince.addItem(GAP.getProvince_id()+" - "+GAP.getProvince());
        }
    }
    
    public void onProvinceComboChanged(){
        DB_Connection dbc;
        try {
            dbc = new DB_Connection();
        
            int province_id = Integer.parseInt(InputComboProvince.getSelectedItem().toString().substring(0,2));
            List<MOD_Area> getAllArea = (new DAO_Province(dbc.getConnection())).RetrieveAreaData(province_id);

            String debug = "";
            InputArea.removeAllItems();
            for(MOD_Area MA : getAllArea) {
                InputArea.addItem(MA.getArea_number()+" - "+MA.getArea_name());
            }
        } catch (IOException ex) {
            Logger.getLogger(Generator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void onAreaComboChanged(){
        if(InputArea.getSelectedItem() != null){
            String provNumber = InputComboProvince.getSelectedItem().toString().substring(0,2);
            String areaNumber = InputArea.getSelectedItem().toString().substring(0,2);
            areaNumber = areaNumber.replaceAll("\\s+","");
            
            if(areaNumber.length() == 1){
                areaNumber = "0"+areaNumber;
            }
            String ProvArea = provNumber+areaNumber;
            inputKTPNumber.setText(ProvArea);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton GenerateRandomQRButton;
    private javax.swing.JComboBox InputArea;
    private javax.swing.JComboBox InputComboProvince;
    private javax.swing.JToggleButton ToggleLockSetting;
    private javax.swing.JLabel imageQR;
    private javax.swing.JTextField inputKTPNumber;
    private javax.swing.JTextField inputPengawasID;
    private javax.swing.JTextField inputTPSID;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtResultArray;
    // End of variables declaration//GEN-END:variables
}
